{"version":3,"sources":["components/GlobalStore.js","components/NavBar.js","components/Search.js","components/Saved.js","App.js","index.js"],"names":["GlobalData","React","createContext","dispatcher","state","action","type","newState","cartItemIdx","cart","findIndex","item","id","console","log","num","push","GlobalStore","props","useReducer","globalData","dispatch","Provider","value","NavBar","location","useLocation","alert","class","to","className","src","alt","style","width","height","pathname","Search","useState","showBook","setShowBook","txtSearch","useRef","a","fetch","then","result","json","apiBook","book","booktitle","requestOptions","method","headers","body","JSON","stringify","mybook","bookimageLinks","bookinfoLink","bookdescription","bookauthors","for","ref","onClick","event","preventDefault","current","searchbooks","map","volumeInfo","title","imageLinks","infoLink","description","authors","savebook","Saved","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7765a122.chunk.js","sourcesContent":["import React, { useContext, useReducer } from \"react\";\r\n\r\n/*\r\n{\r\n    cart: [ { id, num, price }]\r\n}\r\n\r\n\r\n*/\r\nconst GlobalData = React.createContext();\r\n\r\nfunction dispatcher(state,action){\r\nswitch( action.type ){\r\n    /* { type: \"addToCart\", id: [product-id], num: [# product], price} */\r\n    case 'addToCart':\r\n        let newState = {...state};\r\n        // check if item already exists in the cart\r\n        const cartItemIdx = newState.cart.findIndex( item=>item.id==action.id );\r\n        if( cartItemIdx>-1 ){\r\n            console.log( `[dispatcher:${action.type}] cart.num(${newState.cart[cartItemIdx].num}) += (${action.num})` );\r\n            newState.cart[cartItemIdx].num += action.num;\r\n        } else {\r\n            newState.cart.push( { ...action } );\r\n        }\r\n        console.log( `[GlobalStore:addToCart] id(${action.id}) cartItemIdx(${cartItemIdx})`, newState );\r\n        return newState;\r\n\r\n    default:\r\n    console.log( `crap sorry, dunno what to do` );\r\n    break;\r\n}\r\n}\r\n\r\nfunction GlobalStore( props ){\r\n    const [ globalData, dispatch ]= useReducer( dispatcher, { cart: [] } );\r\n    \r\n    return (\r\n        <GlobalData.Provider value={[ globalData, dispatch ]} {...props} />\r\n    )\r\n}\r\n\r\nfunction useGlobalStore(){\r\n    return useContext(GlobalData);\r\n}\r\n\r\nexport { GlobalStore, useGlobalStore };","import React, { useState } from 'react';\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport { useGlobalStore } from \"./GlobalStore\";\r\n\r\n/* activePage  | changePage-call-back */\r\nfunction NavBar() {\r\n  // const [isShown, setShown] = useState(false);\r\n  // // const [ globalData ] = useGlobalStore();\r\n\r\n  // const showClass = !isShown\r\n  //     ? `collapse navbar-collapse`\r\n  //     : `collapse navbar-collapse show`;\r\n\r\n  const location = useLocation();\r\n\r\n  const style = {\r\n      logo: { width: '64px', height: '64px' }\r\n  }\r\n\r\n  // const cartTotalQuantity = globalData.cart.reduce( (total,item) => total+item.num, 0 );\r\n  alert(\"GOOGLE BOOK 2 !\");\r\n\r\n  return (\r\n    <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n      {alert(\"GOOGLE BOOK 3 !\")}\r\n      <Link to=\"/\" className=\"navbar-brand\">\r\n          <img src='https://www.dalmio-dent.md/wp-content/uploads/2016/11/Untitled-6.png' alt=\"\" style={style.logo} />\r\n      </Link>\r\n      {/* <a class=\"navbar-brand\" href=\"#\" onClick={ function(){ props.changePage('AboutPage')} }>Pupster</a> */}\r\n      {/* <button onClick={() => setShown(!isShown)} class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span class=\"navbar-toggler-icon\"></span>\r\n      </button> */}\r\n\r\n      <div id=\"navbarSupportedContent\"> {/* <div className={showClass} id=\"navbarSupportedContent\"></div> */}\r\n        <ul class=\"navbar-nav mr-auto\">\r\n\r\n          <li className=\"nav-item\">\r\n            <Link to=\"/search\" className={location.pathname === \"/search\" ? \"nav-link active\" : \"nav-link\"}>\r\n              Search\r\n            </Link>\r\n          </li>  \r\n\r\n          <li className=\"nav-item\">\r\n            <Link to=\"/saved\" className={location.pathname === \"/saved\" ? \"nav-link active\" : \"nav-link\"}>\r\n              Saved\r\n            </Link>\r\n          </li>  \r\n\r\n          {/* <li className=\"nav-item\">\r\n            <Link to=\"/productlist\" className={location.pathname === \"/productlist\" ? \"nav-link active\" : \"nav-link\"}>\r\n              Product List\r\n            </Link>\r\n          </li>          \r\n          <li className=\"nav-item\">\r\n            <Link to=\"/productadd\" className={location.pathname === \"/productadd\" ? \"nav-link active\" : \"nav-link\"}>\r\n              Product Add\r\n            </Link>\r\n          </li> \r\n          <li className=\"nav-item\">\r\n            <Link to=\"/settings\" className={location.pathname === \"/settings\" ? \"nav-link active\" : \"nav-link\"}>\r\n              Settings\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link to=\"/cart\" className={location.pathname === \"/cart\" ? \"nav-link active\" : \"nav-link\"}>\r\n              { cartTotalQuantity \r\n                ? <span class=\"badge badge-pill badge-success\"><i class=\"fas fa-shopping-cart\"></i> {cartTotalQuantity}</span>\r\n                : ''\r\n              }\r\n            </Link>\r\n          </li>           */}\r\n          \r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default NavBar;","import React, { useState, useRef } from \"react\";\r\n\r\nfunction Search( props ){\r\n    // let starsHtml = '';\r\n    // for( let starCnt=1; starCnt<=5; starCnt++ ){\r\n    //     starsHtml += ( props.rating >= starCnt \r\n    //         ? '<i class=\"fas fa-star text-warning\"></i>'\r\n    //         : '<i class=\"far fa-star\"></i>' );\r\n    // }\r\n\r\n\r\n    const [ showBook, setShowBook ]= useState([]);\r\n    const txtSearch = useRef();\r\n    \r\n    \r\n    \r\n    function searched(event) {\r\n        event.preventDefault();\r\n        console.log(txtSearch.current.value);\r\n\r\n        searchbooks(txtSearch.current.value);\r\n    }\r\n\r\n\r\n    async function searchbooks( txtSearch ){    \r\n        const apiBook = await fetch(`/api/books/${txtSearch}`).then( result=>result.json() );\r\n        console.log(apiBook)\r\n        setShowBook( apiBook );\r\n    }\r\n\r\n\r\n    async function savebook( book ){    \r\n        // const apiBook = await fetch(`/api/books/${txtSearch}`).then( result=>result.json() );\r\n        // console.log(apiBook)\r\n        // setShowBook( apiBook );\r\n\r\n        console.log(\"VVVVVVVV\")\r\n        console.log(book.booktitle);\r\n\r\n        // Simple POST request with a JSON body using fetch\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({mybook:{ \r\n                booktitle : book.booktitle,\r\n                bookimageLinks : book.bookimageLinks,\r\n                bookinfoLink : book.bookinfoLink,\r\n                bookdescription : book.bookdescription,\r\n                bookauthors : book.bookauthors \r\n            }})\r\n        };\r\n        const apiBook = await fetch(`/api/books`, requestOptions).then( result=>result.json() );\r\n        console.log(apiBook)\r\n        // fetch('https://jsonplaceholder.typicode.com/posts', requestOptions)\r\n        //     .then(response => response.json())\r\n            // .then(data => this.setState({ postId: data.id }));\r\n\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <>\r\n            \r\n            <div class=\"row\">\r\n                JUMBO\r\n            </div>\r\n\r\n\r\n            <div class=\"row\">\r\n                Book Search\r\n                <br/>\r\n                <form>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"searchtxt\"></label>\r\n                        <input id=\"searchtxt\" type=\"text\" ref={txtSearch} class=\"form-control\"></input>\r\n                    </div>\r\n                    <button onClick={searched} class=\"btn btn-primary submit\">Search</button>\r\n                </form>\r\n            </div>\r\n\r\n\r\n\r\n            <div class='row'>\r\n                Search Result\r\n\r\n                <div class=\"mb-3\">\r\n                    <ul class=\"col-6 list-group\">\r\n                        { showBook.map( book =>\r\n                        <>\r\n                        <li class=\"list-group-item\">{book.volumeInfo.title}</li> \r\n                       \r\n                        <li class=\"list-group-item\"><img src={book.volumeInfo.imageLinks} class='img-thumbnail' /></li> \r\n                        <li class=\"list-group-item\"><img src={book.volumeInfo.infoLink} class='img-thumbnail' /></li> \r\n                        <li class=\"list-group-item\">{book.volumeInfo.description}</li> \r\n                        <li class=\"list-group-item\">{book.volumeInfo.authors}</li> \r\n                        {\r\n                            \r\n                        }\r\n                        <button onClick={\r\n                             \r\n                            () => savebook( \r\n                                \r\n                                {\r\n                                    booktitle : book.volumeInfo.title,\r\n                                    bookimageLinks : book.volumeInfo.imageLinks,\r\n                                    bookinfoLink : book.volumeInfo.infoLink,\r\n                                    bookdescription : book.volumeInfo.description,\r\n                                    bookauthors : book.volumeInfo.authors\r\n                                }\r\n\r\n                             )}>Save in Mongo</button>\r\n                        </>\r\n\r\n                        \r\n                        )}\r\n                    </ul>\r\n                </div>\r\n\r\n\r\n                   \r\n            </div>\r\n\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Search;","import React from \"react\";\r\n\r\nfunction Saved( props ){\r\n    alert(\"GOOGLE BOOK 4-1 !\")\r\n    // let starsHtml = '';\r\n    // for( let starCnt=1; starCnt<=5; starCnt++ ){\r\n    //     starsHtml += ( props.rating >= starCnt \r\n    //         ? '<i class=\"fas fa-star text-warning\"></i>'\r\n    //         : '<i class=\"far fa-star\"></i>' );\r\n    // }\r\n    return (\r\n        <>\r\n        {alert(\"GOOGLE BOOK 4-2 !\")}\r\n        Saved\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Saved;","import React from 'react';\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\n\r\nimport { GlobalStore } from \"./components/GlobalStore\";\r\n\r\nimport NavBar from './components/NavBar';\r\nimport Search from './components/Search';\r\nimport Saved from './components/Saved';\r\n\r\n\r\nfunction App() {\r\nalert(\"GOOGLE BOOK 0 !\")\r\n  return (\r\n    <Router>\r\n      <GlobalStore> {/* provides common elements across components */}\r\n      {alert(\"GOOGLE BOOK 1 !\")}\r\n\r\n      <div className=\"App\">\r\n          <NavBar />\r\n          <div class=\"container\">\r\n            <Route exact path={[\"/\",\"/search\"]} component={Search} />\r\n            <Route path=\"/saved\" component={Saved} />\r\n            {/* <Route path=\"/productinfo/:id\" component={Saved} /> */}\r\n\r\n           \r\n          </div>\r\n\r\n          \r\n      </div>\r\n      </GlobalStore>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}